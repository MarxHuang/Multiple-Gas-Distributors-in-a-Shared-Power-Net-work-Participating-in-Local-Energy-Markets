# -*- coding: utf-8 -*-
"""
Created on Mon Dec  2 20:48:41 2024

@author: 黄俊杰
"""
import numpy as np
import pandas as pd


multiple = 1e3
gas_multiple = 0.8

class Case10:
    bus = np.array([
        [1, 3, 0, 0, 0, 0, 1, 1, 0, 11, 1, 1, 1],
        [2, 1, 60, 60, 0, 0, 1, 1, 0, 11, 1, 1.1, 0.9],
        [3, 1, 40, 30, 0, 0, 1, 1, 0, 11, 1, 1.1, 0.9],
        [4, 1, 55, 55, 0, 0, 1, 1, 0, 11, 1, 1.1, 0.9],
        [5, 1, 30, 30, 0, 0, 1, 1, 0, 11, 1, 1.1, 0.9],
        [6, 1, 20, 15, 0, 0, 1, 1, 0, 11, 1, 1.1, 0.9],
        [7, 1, 55, 55, 0, 0, 1, 1, 0, 11, 1, 1.1, 0.9],
        [8, 1, 45, 45, 0, 0, 1, 1, 0, 11, 1, 1.1, 0.9],
        [9, 1, 40, 40, 0, 0, 1, 1, 0, 11, 1, 1.1, 0.9],
        [10, 1, 35, 30, 0, 0, 1, 1, 0, 11, 1, 1.1, 0.9]
        ])
    
    branch = np.array([
        [1, 2, 1.093, 0.455, 0, 0, 0, 0, 0, 0, 1, -360, 360],
        [1, 3, 1.184, 0.494, 0, 0, 0, 0, 0, 0, 1, -360, 360],
        [2, 4, 2.095, 0.873, 0, 0, 0, 0, 0, 0, 1, -360, 360],
        [2, 6, 3.188, 1.329, 0, 0, 0, 0, 0, 0, 1, -360, 360],
        [4, 5, 1.093, 0.455, 0, 0, 0, 0, 0, 0, 1, -360, 360],
        [6, 7, 1.002, 0.417, 0, 0, 0, 0, 0, 0, 1, -360, 360],
        [7, 8, 4.403, 1.215, 0, 0, 0, 0, 0, 0, 1, -360, 360],
        [7, 9, 5.642, 1.597, 0, 0, 0, 0, 0, 0, 1, -360, 360],
        [8, 10, 2.89, 0.818, 0, 0, 0, 0, 0, 0, 1, -360, 360]
        ])
    
    parameters_of_generators = np.array([
        [2, 0, 3.5, 0.35],
        [3, 0, 1.3, 0.60],
        [4, 0, 2.0, 0.55],
        [5, 0, 2.0, 0.50],
        [6, 0, 2.0, 0.70],
        [7, 0, 2.0, 0.35],
        [8, 0, 2.0, 0.70],
        [9, 0, 1.0, 0.41],
        [10, 0, 6.0, 0.45]
        ])
    
    MVA_base = 1 * multiple  # 翻200倍适应气网负荷
    V_base = bus[1, -4] * 1e3
    S_base = MVA_base * 1e6
    
    branch[:, 2:4] = branch[:, 2:4] / (V_base**2 / S_base)
    branch[:, 2] = 1.0 / branch[:, 2]
    bus[:, 2:4] = bus[:, 2:4] / 1e3
    parameters_of_generators[:, 2] = parameters_of_generators[:, 2] / 10
    
    parameters_of_generators[:, 2] = parameters_of_generators[:, 2] / 1.5
    
    # 翻200倍适应气网负荷
    bus[:, 2:4] = bus[:, 2:4] * multiple
    parameters_of_generators[:, 2] = parameters_of_generators[:, 2] * multiple
'''
Gas case data format:
    1.parameters_of_nodes
    [Node.No, Gas load(kcf), Pressure maximum(Psig), Pressure minimum(Psig)]
    
    2.paremeters_of_pipelines
    [Number, fbus, tbus, C(kcf/Psig), Capacity(kcf)]
    
    3.parameters_of_gas_sources
    [Node.No, Maximum(kcf), Minimum(kcf), Price(＄/kcf)]
    [1,       6000,         2000,         2           ]
    
    4.parameters_of_compressors
    [Inlet node, Outlet node, Minimum of ratio, Maximum of ratio, Maximum of transported gas flow/kcf, Z_C, B_C, alpha_C, beta_C, gamma_C]
'''
class GasCase7:
    parameters_of_nodes = np.array([
        [1, 0, 200, 180],
        [2, 0, 130, 120],
        [3, 0, 120, 100],
        [4, 0, 160, 145],
        [5, 1000, 170, 150],
        [6, 4000, 130, 110],
        [7, 3000, 150, 135]
        ])
    
    parameters_of_pipelines = np.array([
        [1, 1, 4, 45., 5200],
        [2, 2, 3, 38., 3400],
        [4, 4, 5, 37.5, 2100],
        [5, 4, 7, 43.5, 3200],
        [6, 5, 6, 48., 4300]
        ])
    
    parameters_of_gas_sources = np.array([
        [1, 6000, 2000, 2],
        [2, 4500, 1000, 2.5]
        ])
    
    parameters_of_compressors = np.array([
        [3, 5, 1.2, 1.8, 3200, 0.234, 227, 0, 0.003, 0]
        ])
    pressure_max = 200
    pressure_min = 100
    
    df = pd.read_excel('气负荷波动数据.xlsx', sheet_name='GasCase7')
    gas_load_coefficient = np.array(df)
    gas_load_coefficient = gas_load_coefficient * gas_multiple
    
    min_gas = np.array(
        [2.413543569340175054e+03,	
         2.331774193570699481e+03,	
         2.232152201573002003e+03,	
         2.169879693161979048e+03,	
         2.118164453316021536e+03,	
         2.077356003178405899e+03,	
         2.046863631864984427e+03,	
         2.027330022850947898e+03,	
         2.020148302774350213e+03,	
         2.034860266076490007e+03,	
         2.063762784790184924e+03,	
         2.124751274804173136e+03,	
         2.210554997004296638e+03,	
         2.284343295387038779e+03,	
         2.371031242666557318e+03,	
         2.508491520000180572e+03,	
         2.660725849071938683e+03,	
         2.757021017531573762e+03,	
         2.822828687128921956e+03,	
         2.869096322781366325e+03,	
         2.900757345906280989e+03,	
         2.903509267552306483e+03,	
         2.877451433056017322e+03,	
         2.816958531499735727e+03,	
         2.784461487781405594e+03,	
         2.790136136644867747e+03,	
         2.835549707157904777e+03,	
         2.829721941909670477e+03,	
         2.862947104489831872e+03,	
         2.876427846242355827e+03,	
         2.861773058919020968e+03,	
         2.829803199141667847e+03,	
         2.831316222345900769e+03,	
         2.843947441131980668e+03,	
         2.855022465041018222e+03,	
         2.848197405226763749e+03,	
         2.874224436769585282e+03,	
         2.920559735295474184e+03,	
         2.953339485186277216e+03,	
         2.944725514735385332e+03,	
         2.943618707778459793e+03,	
         2.932211721312677582e+03,	
         2.894722827388333826e+03,	
         2.816108161665882562e+03,	
         2.725597721605384777e+03,	
         2.640012717658702059e+03,	
         2.559546903634435694e+03,	
         2.478414800234941595e+03,	
         2.400958087186518242e+03,	
         2.322688555618348801e+03,	
         2.232188532484779898e+03,	
         2.174723445906498910e+03,	
         2.123682402320223446e+03,	
         2.083267100660837059e+03,	
         2.055015875848728228e+03,	
         2.029008260273459427e+03,	
         2.013855377269827613e+03,	
         2.020635891844162188e+03,	
         2.058228671103820943e+03,	
         2.115854516759114631e+03,	
         2.182728842385541157e+03,	
         2.223115736288117660e+03,	
         2.256167985077185222e+03,	
         2.346720282235402465e+03,	
         2.455595520436558672e+03,	
         2.546484416774736474e+03,	
         2.609074369478366862e+03,	
         2.654209871528053554e+03,	
         2.677070117439726346e+03,	
         2.692435336497337630e+03,	
         2.694375194302394902e+03,	
         2.680153801843205656e+03,	
         2.676680673420930816e+03,	
         2.686293466822333357e+03,	
         2.706606206240728625e+03,	
         2.714132706088126270e+03,	
         2.702387400944845012e+03,	
         2.696821174470449478e+03,	
         2.686352002058505150e+03,	
         2.690894914596582566e+03,	
         2.727176333728457848e+03,	
         2.767377542263437135e+03,	
         2.766611684187365427e+03,	
         2.775475724321099278e+03,	
         2.811891181030109237e+03,	
         2.862728078187868505e+03,	
         2.917548984250201556e+03,	
         2.949997033719328556e+03,	
         2.951633124659211262e+03,	
         2.933226286848019754e+03,	
         2.892717219388461217e+03,	
         2.816793099216143673e+03,	
         2.717443619126560407e+03,	
         2.616700234619290313e+03,	
         2.526509867092111108e+03,	
         2.425476686814286495e+03,
         ]
        )
    
    max_gas = np.full(96, 3400)
    
    
class GasCase20:
    parameters_of_nodes = np.array([
        [1, 0, 320, 300],
        [2, 0, 320, 300],
        [3, 4000, 305, 285],
        [4, 5000, 295, 275],
        [5, 0, 265, 245],
        [6, 2500, 305, 290],
        [7, 0, 310, 295],
        [8, 0, 285, 265],
        [9, 2000, 270, 250],
        [10, 3500, 265, 245],
        [11, 3000, 255, 235],
        [12, 5500, 200, 180],
        [13, 0, 190, 170],
        [14, 0, 240, 220],
        [15, 0, 235, 215],
        [16, 0, 220, 210],
        [17, 0, 160, 140],
        [18, 0, 215, 185],
        [19, 1500, 180, 170],
        [20, 5000, 160, 140]
        ])

    parameters_of_pipelines = np.array([
        [1, 1, 2, 115.0, 10000],
        [2, 2, 3, 112.5, 10000],
        [3, 3, 4, 65.1, 9500],
        [4, 4, 8, 63.4, 8000],
        [6, 6, 7, 66.1, 8000],
        [7, 7, 4, 60., 5000],
        [8, 8, 11, 61.3, 11000],
        [9, 8, 9, 65., 6000],
        [10, 9, 10, 61.5, 5000],
        [11, 11, 12, 60., 12000],
        [12, 12, 13, 62.5, 8000],
        [14, 13, 17, 67.5, 8000],
        [15, 14, 15, 61.0, 5000],
        [16, 15, 16, 59.0, 5000],
        [18, 18, 19, 65.9, 8000],
        [19, 19, 20, 67.0, 6000],
        ])
    
    parameters_of_gas_sources = np.array([
        [1, 12000, 1000, 2.2],
        [5, 8000, 1000, 2.4],
        [8, 8000, 1000, 2.5],
        [11, 5000, 1000, 2.1],
        [13, 6000, 500, 2.3]
        ])

    parameters_of_compressors = np.array([
        [5, 6, 1.2, 1.8, 8000, 0.234, 227, 0, 0.003, 0],
        [13, 14, 1.2, 1.8, 5000, 0.233, 226, 0, 0.002, 0],
        [17, 18, 1.2, 1.8, 8000, 0.235, 228, 0, 0.003, 0]
        ])
    
    pressure_max = 320
    pressure_min = 140
    
    min_gas = np.array(
        [1.673670161476724024e+04,
         1.629137690304850912e+04,
         1.586850272991959537e+04,
         1.556176583335874238e+04,
         1.531244386437170033e+04,
         1.510458668453568316e+04,
         1.498158735022885594e+04,
         1.492895567855026820e+04,
         1.493775722802636665e+04,
         1.502274537608565151e+04,
         1.541334396038107479e+04,
         1.607382410926269040e+04,
         1.685350466777491238e+04,
         1.754591107281048971e+04,
         1.824303215128320880e+04,
         1.921094761185534298e+04,
         2.017303898828529418e+04,
         2.081530240934953326e+04,
         2.120188628257258824e+04,
         2.147351424516025145e+04,
         2.162573548768040200e+04,
         2.163722203064680798e+04,
         2.160770672787183503e+04,
         2.144913630363794073e+04,
         2.122695966376266733e+04,
         2.121127615696918656e+04,
         2.140591763490763333e+04,
         2.146182820889900177e+04,
         2.149717665274362662e+04,
         2.150909704299872101e+04,
         2.159459518541896614e+04,
         2.165497685441177600e+04,
         2.166064203608400203e+04,
         2.165122604092974507e+04,
         2.151971319262407269e+04,
         2.123277381235511712e+04,
         2.107385278832655968e+04,
         2.122457658658615401e+04,
         2.134911284201286981e+04,
         2.125849283511945396e+04,
         2.109203078920572807e+04,
         2.081950126489027025e+04,
         2.041779807467618230e+04,
         1.977811122395672282e+04,
         1.905912265177347581e+04,
         1.843938029572719097e+04,
         1.784972269997588592e+04,
         1.729012327990774065e+04,
         1.675817068585289235e+04,
         1.629889787507002984e+04,
         1.582378667409395712e+04,
         1.550435518210907685e+04,
         1.525135811696186283e+04,
         1.503832083387935563e+04,
         1.491886286210446087e+04,
         1.484689922869470320e+04,
         1.479901842025477526e+04,
         1.487491358411755573e+04,
         1.522088048181986960e+04,
         1.583050015429639097e+04,
         1.650644912442602072e+04,
         1.708055973583017476e+04,
         1.765929004417132819e+04,
         1.857221748395534814e+04,
         1.948794296849078819e+04,
         2.006847685330889362e+04,
         2.041372531187949789e+04,
         2.066992495537411742e+04,
         2.079418457105915513e+04,
         2.079990173435722318e+04,
         2.078442683715195744e+04,
         2.067465334969981996e+04,
         2.047683331616169016e+04,
         2.043208174879525541e+04,
         2.065512201014345919e+04,
         2.080060415227063640e+04,
         2.069307456125268436e+04,
         2.060535975798519212e+04,
         2.068073571050708779e+04,
         2.074177344027194704e+04,
         2.089694732320610638e+04,
         2.084589864296153610e+04,
         2.079633388685688988e+04,
         2.061455983481614749e+04,
         2.060685635372161778e+04,
         2.076932170373553890e+04,
         2.091070919749092718e+04,
         2.086871191853544951e+04,
         2.076565050138047445e+04,
         2.054419378410732315e+04,
         2.024481620934569219e+04,
         1.961004995739228616e+04,
         1.898119509460617337e+04,
         1.840312932702566832e+04,
         1.780994828090303417e+04,
         1.728023703670116811e+04
         ]
        )
    
    max_gas = np.array(
        [26191.1,
         25740.5,
         25314.3,
         25004.3,
         24752.1,
         24542.2,
         24417,
         24363.1,
         24372.1,
         24458.3,
         24852.5,
         25519.2,
         26241.5,
         26253.9,
         26265.3,
         26301.9,
         26343.6,
         26387.2,
         26423.1,
         26456,
         26475.7,
         26490.2,
         26485.2,
         26480.6,
         26478.9,
         26479.6,
         26483.6,
         26461.7,
         26438.2,
         26447.3,
         26446.6,
         26439.6,
         26440,
         26444.8,
         26448.1,
         26463.5,
         26485.3,
         26520.5,
         26545.5,
         26565.6,
         26571.1,
         26565.7,
         26546.9,
         26510.3,
         26464.1,
         26416.7,
         26374.4,
         26322.7,
         26214,
         25749.5,
         25268.4,
         24945.9,
         24689.8,
         24474.5,
         24353.5,
         24280.6,
         24232.4,
         24308.6,
         24658.5,
         25274.7,
         25957.5,
         26405,
         26472.3,
         26564.4,
         26656.5,
         26710.7,
         26739.5,
         26755.5,
         26765.8,
         26760.9,
         26759.1,
         26747.5,
         26737.4,
         26716.3,
         26741.7,
         26768.6,
         26762.8,
         26748,
         26750.8,
         26748.8,
         26754.3,
         26750.3,
         26755,
         26737,
         26719.8,
         26729.2,
         26743.3,
         26747.8,
         26738.7,
         26705.1,
         26660,
         26600.2,
         26540.3,
         26496.6,
         26437.6,
         26397.8
        ]
        )
    
    df = pd.read_excel('气负荷波动数据.xlsx', sheet_name='GasCase20')
    gas_load_coefficient = np.array(df)
    gas_load_coefficient = gas_load_coefficient * gas_multiple